realtek/realtek.c:  dev_class->id = FP_COMPONENT;
realtek/realtek.c:  dev_class->full_name = "Realtek MOC Fingerprint Sensor";
realtek/realtek.c:  dev_class->type = FP_DEVICE_TYPE_USB;
realtek/realtek.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
realtek/realtek.c:  dev_class->id_table = id_table;
realtek/realtek.c:  dev_class->nr_enroll_stages = MAX_ENROLL_SAMPLES;
realtek/realtek.c:  dev_class->temp_hot_seconds = -1;
realtek/realtek.c:  dev_class->open = dev_init;
realtek/realtek.c:  dev_class->close = dev_exit;
realtek/realtek.c:  dev_class->probe = dev_probe;
realtek/realtek.c:  dev_class->verify = identify_verify;
realtek/realtek.c:  dev_class->identify = identify_verify;
realtek/realtek.c:  dev_class->enroll = enroll;
realtek/realtek.c:  dev_class->delete = delete_print;
realtek/realtek.c:  dev_class->clear_storage = clear_storage;
realtek/realtek.c:  dev_class->list = list_print;
upeksonly.c:  dev_class->id = "upeksonly";
upeksonly.c:  dev_class->full_name = "UPEK TouchStrip Sensor-Only";
upeksonly.c:  dev_class->type = FP_DEVICE_TYPE_USB;
upeksonly.c:  dev_class->id_table = id_table;
upeksonly.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
upeksonly.c:  dev_class->usb_discover = dev_discover;
egis0570.c:  dev_class->id = "egis0570";
egis0570.c:  dev_class->full_name = "Egis Technology Inc. (aka. LighTuning) 0570";
egis0570.c:  dev_class->type = FP_DEVICE_TYPE_USB;
egis0570.c:  dev_class->id_table = id_table;
egis0570.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
virtual-device-storage.c:  dev_class->id = FP_COMPONENT;
virtual-device-storage.c:  dev_class->full_name = "Virtual device with storage and identification for debugging";
virtual-device-storage.c:  dev_class->id_table = driver_ids;
virtual-device-storage.c:  dev_class->probe = dev_probe;
virtual-device-storage.c:  dev_class->identify = dev_identify;
virtual-device-storage.c:  dev_class->list = dev_list;
virtual-device-storage.c:  dev_class->delete = dev_delete;
virtual-device-storage.c:  dev_class->clear_storage = dev_clear_storage;
virtual-device-storage.c:  dev_class->features |= FP_DEVICE_FEATURE_DUPLICATES_CHECK;
virtual-device.c:  dev_class->id = FP_COMPONENT;
virtual-device.c:  dev_class->full_name = "Virtual device for debugging";
virtual-device.c:  dev_class->type = FP_DEVICE_TYPE_VIRTUAL;
virtual-device.c:  dev_class->id_table = driver_ids;
virtual-device.c:  dev_class->nr_enroll_stages = 5;
virtual-device.c:  dev_class->open = dev_init;
virtual-device.c:  dev_class->close = dev_deinit;
virtual-device.c:  dev_class->verify = dev_verify;
virtual-device.c:  dev_class->enroll = dev_enroll;
virtual-device.c:  dev_class->cancel = dev_cancel;
vfs101.c:  dev_class->id = "vfs101";
vfs101.c:  dev_class->full_name = "Validity VFS101";
vfs101.c:  dev_class->type = FP_DEVICE_TYPE_USB;
vfs101.c:  dev_class->id_table = id_table;
vfs101.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
vfs7552.c:  dev_class->id = "vfs7552";
vfs7552.c:  dev_class->full_name = "Validity VFS7552";
vfs7552.c:  dev_class->type = FP_DEVICE_TYPE_USB;
vfs7552.c:  dev_class->id_table = id_table;
vfs7552.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
uru4000.c:  dev_class->id = "uru4000";
uru4000.c:  dev_class->full_name = "Digital Persona U.are.U 4000/4000B/4500";
uru4000.c:  dev_class->type = FP_DEVICE_TYPE_USB;
uru4000.c:  dev_class->id_table = id_table;
uru4000.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
upekts.c:  dev_class->id = FP_COMPONENT;
upekts.c:  dev_class->full_name = "UPEK TouchStrip";
upekts.c:  dev_class->type = FP_DEVICE_TYPE_USB;
upekts.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
upekts.c:  dev_class->id_table = id_table;
upekts.c:  dev_class->nr_enroll_stages = 3;
upekts.c:  dev_class->open = dev_init;
upekts.c:  dev_class->close = dev_exit;
upekts.c:  dev_class->verify = verify;
upekts.c:  dev_class->enroll = enroll;
upekts.c:  /* dev_class->cancel = cancel; */
aes4000.c:  dev_class->id = "aes4000";
aes4000.c:  dev_class->full_name = "AuthenTec AES4000";
aes4000.c:  dev_class->id_table = id_table;
virtual-image.c:  dev_class->id = FP_COMPONENT;
virtual-image.c:  dev_class->full_name = "Virtual image device for debugging";
virtual-image.c:  dev_class->type = FP_DEVICE_TYPE_VIRTUAL;
virtual-image.c:  dev_class->id_table = driver_ids;
vcom5s.c:  dev_class->id = "vcom5s";
vcom5s.c:  dev_class->full_name = "Veridicom 5thSense";
vcom5s.c:  dev_class->type = FP_DEVICE_TYPE_USB;
vcom5s.c:  dev_class->id_table = id_table;
vcom5s.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
aes2660.c:  dev_class->id = "aes2660";
aes2660.c:  dev_class->full_name = "AuthenTec AES2660";
aes2660.c:  dev_class->type = FP_DEVICE_TYPE_USB;
aes2660.c:  dev_class->id_table = id_table;
aes2660.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
aesx660.c:  dev_class->type = FP_DEVICE_TYPE_USB;
aesx660.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
aes2550.c:  dev_class->id = "aes2550";
aes2550.c:  dev_class->full_name = "AuthenTec AES2550/AES2810";
aes2550.c:  dev_class->type = FP_DEVICE_TYPE_USB;
aes2550.c:  dev_class->id_table = id_table;
aes2550.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
elan.c:  dev_class->id = "elan";
elan.c:  dev_class->full_name = "ElanTech Fingerprint Sensor";
elan.c:  dev_class->type = FP_DEVICE_TYPE_USB;
elan.c:  dev_class->id_table = elan_id_table;
elan.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
aes3k.c:  dev_class->type = FP_DEVICE_TYPE_USB;
aes3k.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
aes1610.c:  dev_class->id = "aes1610";
aes1610.c:  dev_class->full_name = "AuthenTec AES1610";
aes1610.c:  dev_class->type = FP_DEVICE_TYPE_USB;
aes1610.c:  dev_class->id_table = id_table;
aes1610.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
aes2501.c:  dev_class->id = "aes2501";
aes2501.c:  dev_class->full_name = "AuthenTec AES2501";
aes2501.c:  dev_class->type = FP_DEVICE_TYPE_USB;
aes2501.c:  dev_class->id_table = id_table;
aes2501.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
goodixmoc/goodix.c:  dev_class->id = "goodixmoc";
goodixmoc/goodix.c:  dev_class->full_name = "Goodix MOC Fingerprint Sensor";
goodixmoc/goodix.c:  dev_class->type = FP_DEVICE_TYPE_USB;
goodixmoc/goodix.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
goodixmoc/goodix.c:  dev_class->id_table = id_table;
goodixmoc/goodix.c:  dev_class->nr_enroll_stages = DEFAULT_ENROLL_SAMPLES;
goodixmoc/goodix.c:  dev_class->temp_hot_seconds = -1;
goodixmoc/goodix.c:  dev_class->open   = gx_fp_init;
goodixmoc/goodix.c:  dev_class->close  = gx_fp_exit;
goodixmoc/goodix.c:  dev_class->probe  = gx_fp_probe;
goodixmoc/goodix.c:  dev_class->enroll = gx_fp_enroll;
goodixmoc/goodix.c:  dev_class->delete = gx_fp_template_delete;
goodixmoc/goodix.c:  dev_class->clear_storage = gx_fp_template_delete_all;
goodixmoc/goodix.c:  dev_class->list   = gx_fp_template_list;
goodixmoc/goodix.c:  dev_class->verify   = gx_fp_verify_identify;
goodixmoc/goodix.c:  dev_class->identify = gx_fp_verify_identify;
goodixmoc/goodix.c:  dev_class->features |= FP_DEVICE_FEATURE_DUPLICATES_CHECK;
vfs301.c:  dev_class->id = "vfs301";
vfs301.c:  dev_class->full_name = "Validity VFS301";
vfs301.c:  dev_class->type = FP_DEVICE_TYPE_USB;
vfs301.c:  dev_class->id_table = id_table;
vfs301.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
upektc_img.c:  dev_class->id = "upektc_img";
upektc_img.c:  dev_class->full_name = "Upek TouchChip Fingerprint Coprocessor";
upektc_img.c:  dev_class->type = FP_DEVICE_TYPE_USB;
upektc_img.c:  dev_class->id_table = id_table;
upektc_img.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
upektc_img.c:  dev_class->usb_discover = discover;
aes3500.c:  dev_class->id = "aes3500";
aes3500.c:  dev_class->full_name = "AuthenTec AES3500";
aes3500.c:  dev_class->id_table = id_table;
synaptics/synaptics.c:  dev_class->id = FP_COMPONENT;
synaptics/synaptics.c:  dev_class->full_name = SYNAPTICS_DRIVER_FULLNAME;
synaptics/synaptics.c:  dev_class->type = FP_DEVICE_TYPE_USB;
synaptics/synaptics.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
synaptics/synaptics.c:  dev_class->id_table = id_table;
synaptics/synaptics.c:  dev_class->nr_enroll_stages = ENROLL_SAMPLES;
synaptics/synaptics.c:  dev_class->temp_hot_seconds = -1;
synaptics/synaptics.c:  dev_class->open = dev_init;
synaptics/synaptics.c:  dev_class->close = dev_exit;
synaptics/synaptics.c:  dev_class->probe = dev_probe;
synaptics/synaptics.c:  dev_class->verify = verify;
synaptics/synaptics.c:  dev_class->identify = identify;
synaptics/synaptics.c:  dev_class->enroll = enroll;
synaptics/synaptics.c:  dev_class->delete = delete_print;
synaptics/synaptics.c:  dev_class->clear_storage = clear_storage;
synaptics/synaptics.c:  dev_class->cancel = cancel;
synaptics/synaptics.c:  dev_class->suspend = suspend;
synaptics/synaptics.c:  dev_class->resume = resume;
nb1010.c:  dev_class->id = FP_COMPONENT;
nb1010.c:  dev_class->full_name = "NextBiometrics NB-1010-U";
nb1010.c:  dev_class->type = FP_DEVICE_TYPE_USB;
nb1010.c:  dev_class->id_table = id_table;
nb1010.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
vfs0050.c:  dev_class->id = "vfs0050";
vfs0050.c:  dev_class->full_name = "Validity VFS0050";
vfs0050.c:  dev_class->type = FP_DEVICE_TYPE_USB;
vfs0050.c:  dev_class->id_table = id_table;
vfs0050.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
vfs5011.c:  dev_class->id = "vfs5011";
vfs5011.c:  dev_class->full_name = "Validity VFS5011";
vfs5011.c:  dev_class->type = FP_DEVICE_TYPE_USB;
vfs5011.c:  dev_class->id_table = id_table;
vfs5011.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
etes603.c:  dev_class->id = "etes603";
etes603.c:  dev_class->full_name = "EgisTec ES603";
etes603.c:  dev_class->type = FP_DEVICE_TYPE_USB;
etes603.c:  dev_class->id_table = id_table;
etes603.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
elanspi.c:  dev_class->id = "elanspi";
elanspi.c:  dev_class->full_name = "ElanTech Embedded Fingerprint Sensor";
elanspi.c:  dev_class->type = FP_DEVICE_TYPE_UDEV;
elanspi.c:  dev_class->id_table = elanspi_id_table;
elanspi.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
elanspi.c:  dev_class->nr_enroll_stages = 7;       /* these sensors are very hit or miss, may as well record a few extras */
elanmoc/elanmoc.c:  dev_class->id = FP_COMPONENT;
elanmoc/elanmoc.c:  dev_class->full_name = ELAN_MOC_DRIVER_FULLNAME;
elanmoc/elanmoc.c:  dev_class->type = FP_DEVICE_TYPE_USB;
elanmoc/elanmoc.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
elanmoc/elanmoc.c:  dev_class->id_table = id_table;
elanmoc/elanmoc.c:  dev_class->nr_enroll_stages = ELAN_MOC_ENROLL_TIMES;
elanmoc/elanmoc.c:  dev_class->temp_hot_seconds = -1;
elanmoc/elanmoc.c:  dev_class->open = elanmoc_open;
elanmoc/elanmoc.c:  dev_class->close = elanmoc_close;
elanmoc/elanmoc.c:  dev_class->verify = elanmoc_identify;
elanmoc/elanmoc.c:  dev_class->enroll = elanmoc_enroll;
elanmoc/elanmoc.c:  dev_class->identify = elanmoc_identify;
elanmoc/elanmoc.c:  dev_class->delete = elanmoc_delete_print;
elanmoc/elanmoc.c:  dev_class->list = elanmoc_list;
fpcmoc/fpc.c:  dev_class->id =               FP_COMPONENT;
fpcmoc/fpc.c:  dev_class->full_name =        "FPC MOC Fingerprint Sensor";
fpcmoc/fpc.c:  dev_class->type =             FP_DEVICE_TYPE_USB;
fpcmoc/fpc.c:  dev_class->scan_type =        FP_SCAN_TYPE_PRESS;
fpcmoc/fpc.c:  dev_class->id_table =         id_table;
fpcmoc/fpc.c:  dev_class->nr_enroll_stages = MAX_ENROLL_SAMPLES;
fpcmoc/fpc.c:  dev_class->temp_hot_seconds = -1;
fpcmoc/fpc.c:  dev_class->open   =           fpc_dev_open;
fpcmoc/fpc.c:  dev_class->close  =           fpc_dev_close;
fpcmoc/fpc.c:  dev_class->probe  =           fpc_dev_probe;
fpcmoc/fpc.c:  dev_class->enroll =           fpc_dev_enroll;
fpcmoc/fpc.c:  dev_class->delete =           fpc_dev_template_delete;
fpcmoc/fpc.c:  dev_class->list   =           fpc_dev_template_list;
fpcmoc/fpc.c:  dev_class->verify   =         fpc_dev_verify_identify;
fpcmoc/fpc.c:  dev_class->identify =         fpc_dev_verify_identify;
fpcmoc/fpc.c:  dev_class->suspend =          fpc_dev_suspend;
fpcmoc/fpc.c:  dev_class->resume =           fpc_dev_resume;
fpcmoc/fpc.c:  dev_class->clear_storage =    fpc_dev_clear_storage;
fpcmoc/fpc.c:  dev_class->cancel =           fpc_dev_cancel;
fpcmoc/fpc.c:  dev_class->features |= FP_DEVICE_FEATURE_DUPLICATES_CHECK;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->id = FP_COMPONENT;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->full_name = SYNA_TUDOR_MOC_DRIVER_FULLNAME;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->type = FP_DEVICE_TYPE_USB;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->id_table = id_table;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->nr_enroll_stages = SYNA_TUDOR_MOC_DRIVER_NR_ENROLL_STAGES;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->scan_type = FP_SCAN_TYPE_PRESS;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->temp_hot_seconds = -1;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->temp_cold_seconds = -1;
syna_tudor_moc/syna_tudor_moc.c:   // dev_class->usb_discover
syna_tudor_moc/syna_tudor_moc.c:   // dev_class->probe
syna_tudor_moc/syna_tudor_moc.c:   dev_class->open = syna_tudor_moc_open;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->close = syna_tudor_moc_close;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->enroll = syna_tudor_moc_enroll;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->verify = syna_tudor_moc_verify;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->identify = syna_tudor_moc_identify;
syna_tudor_moc/syna_tudor_moc.c:   // dev_class->capture
syna_tudor_moc/syna_tudor_moc.c:   dev_class->list = syna_tudor_moc_list;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->delete = syna_tudor_moc_delete_print;
syna_tudor_moc/syna_tudor_moc.c:   dev_class->clear_storage = syna_tudor_moc_clear_storage;
syna_tudor_moc/syna_tudor_moc.c:   // dev_class->cancel = syna_tudor_moc_cancel;
syna_tudor_moc/syna_tudor_moc.c:   // dev_class->suspend = syna_tudor_moc_suspend;
syna_tudor_moc/syna_tudor_moc.c:   // dev_class->resume = syna_tudor_moc_resume;
aes1660.c:  dev_class->id = "aes1660";
aes1660.c:  dev_class->full_name = "AuthenTec AES1660";
aes1660.c:  dev_class->type = FP_DEVICE_TYPE_USB;
aes1660.c:  dev_class->id_table = id_table;
aes1660.c:  dev_class->scan_type = FP_SCAN_TYPE_SWIPE;
upektc.c:  dev_class->id = "upektc";
upektc.c:  dev_class->full_name = "UPEK TouchChip/Eikon Touch 300";
upektc.c:  dev_class->type = FP_DEVICE_TYPE_USB;
upektc.c:  dev_class->id_table = id_table;
upektc.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
egismoc/egismoc.c:  dev_class->id = FP_COMPONENT;
egismoc/egismoc.c:  dev_class->full_name = EGISMOC_DRIVER_FULLNAME;
egismoc/egismoc.c:  dev_class->type = FP_DEVICE_TYPE_USB;
egismoc/egismoc.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
egismoc/egismoc.c:  dev_class->id_table = egismoc_id_table;
egismoc/egismoc.c:  dev_class->nr_enroll_stages = EGISMOC_ENROLL_TIMES;
egismoc/egismoc.c:  dev_class->temp_hot_seconds = 0;
egismoc/egismoc.c:  dev_class->open = egismoc_open;
egismoc/egismoc.c:  dev_class->cancel = egismoc_cancel;
egismoc/egismoc.c:  dev_class->suspend = egismoc_suspend;
egismoc/egismoc.c:  dev_class->close = egismoc_close;
egismoc/egismoc.c:  dev_class->identify = egismoc_identify_verify;
egismoc/egismoc.c:  dev_class->verify = egismoc_identify_verify;
egismoc/egismoc.c:  dev_class->enroll = egismoc_enroll;
egismoc/egismoc.c:  dev_class->delete = egismoc_delete;
egismoc/egismoc.c:  dev_class->clear_storage = egismoc_clear_storage;
egismoc/egismoc.c:  dev_class->list = egismoc_list;
egismoc/egismoc.c:  dev_class->features |= FP_DEVICE_FEATURE_DUPLICATES_CHECK;
focaltech_moc/focaltech_moc.c:  dev_class->id = FP_COMPONENT;
focaltech_moc/focaltech_moc.c:  dev_class->full_name = FOCALTECH_MOC_DRIVER_FULLNAME;
focaltech_moc/focaltech_moc.c:  dev_class->type = FP_DEVICE_TYPE_USB;
focaltech_moc/focaltech_moc.c:  dev_class->scan_type = FP_SCAN_TYPE_PRESS;
focaltech_moc/focaltech_moc.c:  dev_class->id_table = id_table;
focaltech_moc/focaltech_moc.c:  dev_class->nr_enroll_stages = FOCALTECH_MOC_MAX_FINGERS;
focaltech_moc/focaltech_moc.c:  dev_class->temp_hot_seconds = -1;
focaltech_moc/focaltech_moc.c:  dev_class->open = focaltech_moc_open;
focaltech_moc/focaltech_moc.c:  dev_class->close = focaltech_moc_close;
focaltech_moc/focaltech_moc.c:  dev_class->verify = focaltech_moc_identify;
focaltech_moc/focaltech_moc.c:  dev_class->enroll = focaltech_moc_enroll;
focaltech_moc/focaltech_moc.c:  dev_class->identify = focaltech_moc_identify;
focaltech_moc/focaltech_moc.c:  dev_class->delete = focaltech_moc_delete_print;
focaltech_moc/focaltech_moc.c:  dev_class->list = focaltech_moc_list;
